import { vec3, quat, mat4 } from 'gl-matrix';
declare class Node {
    position: vec3;
    rotation: quat;
    scale: vec3;
    _matrix: mat4;
    _wmatrix: mat4;
    _wposition: Float32Array;
    _parent: Node | null;
    _children: Node[];
    _invalidM: boolean;
    _invalidW: boolean;
    constructor();
    rotateX(rad: number): void;
    rotateY(rad: number): void;
    rotateZ(rad: number): void;
    set x(v: number);
    set y(v: number);
    set z(v: number);
    get x(): number;
    get y(): number;
    get z(): number;
    setScale(s: number): void;
    lookAt(tgt: vec3): void;
    setMatrix(m4: mat4): void;
    add(child: Node): void;
    remove(child: Node): void;
    invalidate(): void;
    updateMatrix(): void;
    updateWorldMatrix(skipParents: boolean): void;
    _computeWorldMatrix(skipParents: boolean): void;
    _hasInvalidWorldMatrix(skipParents: boolean): boolean;
}
export = Node;
